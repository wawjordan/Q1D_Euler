module test_central_flux

  use set_precision,   only : prec
  use fluid_constants, only : gamma
  use fluxes, only : central_flux
  use pfunit_mod

  implicit none

  real(prec), parameter :: toler = 1.0e-13_prec

  contains

  @test
    subroutine central_flux_wall_test

      real(prec), dimension(3,3) :: U
      real(prec), dimension(3,3) :: F_expected
      real(prec), dimension(3,3) :: F
      
      U(1,1) = 1.225_prec
      U(1,2) = 0.0_prec
      U(1,3) = 253312.5_prec

      

      F_expected(1,1) = 0.0_prec
      F_expected(1,2) = 101325.0_prec
      F_expected(1,3) = 0.0_prec

      call central_flux(U,F)

      write(*,*)
      write(*,*) 'zero velocity test case:'
      write(*,*) 'F(1)     = ', F(1,1)
      write(*,*) 'F_exp(1) = ', F_expected(1,1)
      @assertequal(F_expected(1,1), F(1,1), toler)
      write(*,*) 'F(2)     = ', F(1,2)
      write(*,*) 'F_exp(2) = ', F_expected(1,2)
      @assertequal(1.0_prec, F(1,2)/F_expected(1,2), toler)
      write(*,*) 'F(3)     = ', F(1,3)
      write(*,*) 'F_exp(3) = ', F_expected(1,3)
      @assertequal(F_expected(1,3), F(1,3), toler)
      write(*,*) 'toler    = ', toler
      
    end subroutine central_flux_wall_test
  
  @test
    subroutine central_flux_supersonic_test

      real(prec), dimension(3,3) :: U
      real(prec), dimension(3,3) :: F_expected
      real(prec), dimension(3,3) :: F
      
      U(1,1) = 1.225_prec
      U(1,2) = 510.6536695593_prec
      U(1,3) = 917035.5796875_prec

      
      F_expected(1,1) = 510.6536695593_prec
      F_expected(1,2) = 537111.1593750_prec
      F_expected(1,3) = 517438309.9606_prec


      call central_flux(U,F)

      write(*,*)
      write(*,*) 'supersonic test case:'
      write(*,*) 'F(1)     = ', F(1,1)
      write(*,*) 'F_exp(1) = ', F_expected(1,1)
      @assertequal(1.0_prec, F(1,1)/F_expected(1,1), toler)
      write(*,*) 'F(2)     = ', F(1,2)
      write(*,*) 'F_exp(2) = ', F_expected(1,2)
      @assertequal(1.0_prec, F(1,2)/F_expected(1,2), toler)
      write(*,*) 'F(3)     = ', F(1,3)
      write(*,*) 'F_exp(3) = ', F_expected(1,3)
      @assertequal(1.0_prec, F(1,3)/F_expected(1,3), toler)
      write(*,*) 'toler    = ', toler
      
    end subroutine central_flux_supersonic_test

end module test_central_flux
